# Python Django
# Test a Django project on multiple versions of Python.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- master
- another

# container: lucasducau/django:manual

variables:
  VM_IMAGE: 'ubuntu-latest'
  PYTHON_VERSION: '3.x'



stages:
- stage: Test
  displayName: Test code
  jobs:
  - job: Test
    displayName: Test code
    pool:
      vmImage: $(VM_IMAGE)
    container: python:3.8
    steps:

    - script: |
        pip install -r requirements.txt
        export PATH=$PATH:$HOME/.local/bin
      displayName: Install deps

    - task: PythonScript@0
      displayName: 'Export project path'
      inputs:
        scriptSource: 'inline'
        script: |
          """Search all subdirectories for `manage.py`."""
          from glob import iglob
          from os import path
          # Python >= 3.5
          manage_py = next(iglob(path.join('**', 'manage.py'), recursive=True), None)
          if not manage_py:
              raise SystemExit('Could not find a Django project')
          project_location = path.dirname(path.abspath(manage_py))
          print('Found Django project in', project_location)
          print('##vso[task.setvariable variable=projectRoot]{}'.format(project_location))

    - script: |
        pushd '$(projectRoot)'
        python manage.py test --testrunner xmlrunner.extra.djangotestrunner.XMLTestRunner --no-input
      displayName: 'Run tests'

    - task: PublishTestResults@2
      inputs:
        testResultsFiles: "**/TEST-*.xml"
        testRunTitle: 'Python $(PYTHON_VERSION)'
      condition: succeededOrFailed()

    - script: |
        pylint testproject/
      displayName: Run pylint



- stage: Buildandpush
  displayName: Build and push image
  jobs:
  - job: Buildandpush
    displayName: Build and push image
    pool:
      vmImage: $(VM_IMAGE)

    steps:
      - task: Docker@2
        inputs:
          containerRegistry: 'pipeline-registry'
          repository: 'lducausv/django'
          command: 'buildAndPush'
          Dockerfile: '**/Dockerfile'
          tags: |
            auto-$(Build.BuildNumber)
